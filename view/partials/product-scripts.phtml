
function connectRemoveIcon(type, id, target)
{
	$('#' + id).click(function () {
		$('#' + target).hide();
		filterProductList(type);
	});
}

function getParams(type) {

	// Create a new FormData object.
	var params = '?', todo = true;

	var type = $('#search_type').val();
	if (type) { params += 'type=' + type + '&'; todo = false; }
	
	var brand = document.getElementById('search_brand').value;
	if (brand.length >= 2) { params += 'brand=' + brand + '&'; todo = false; }
	
	var reference = document.getElementById('search_reference').value;
	if (reference.length >= 2) { params += 'reference=' + reference + '&'; todo = false; }
	
	var caption = document.getElementById('search_caption').value;
	if (caption.length >= 2) { params += 'caption=' + caption + '&'; todo = false; }
	
	var min_price = document.getElementById('search_min_price').value;
	if (min_price.length >= 2) { params += 'min_price=' + min_price + '&'; todo = false; }

	var max_price = document.getElementById('search_max_price').value;
	if (max_price.length >= 2) { params += 'max_price=' + max_price + '&'; todo = false; }
	
<?php foreach ($context->getConfig('ppitProduct')['properties'] as $propertyId => $property) : ?>

	var <?php echo $propertyId ?> = document.getElementById('search_<?php echo $propertyId ?>').value;
	if (<?php echo $propertyId ?>.length >= 2) { params += '<?php echo $propertyId ?>=' + <?php echo $propertyId ?> + '&'; todo = false; }

	var min_<?php echo $propertyId ?> = document.getElementById('search_min_<?php echo $propertyId ?>').value;
	if (min_<?php echo $propertyId ?>) min_<?php echo $propertyId ?> = encodeDate(min_<?php echo $propertyId ?>);
	if (min_<?php echo $propertyId ?>.length >= 2) { params += 'min_<?php echo $propertyId ?>=' + min_<?php echo $propertyId ?> + '&'; todo = false; }

	var max_<?php echo $propertyId ?> = document.getElementById('search_max_<?php echo $propertyId ?>').value;
	if (max_<?php echo $propertyId ?>) max_<?php echo $propertyId ?> = encodeDate(max_<?php echo $propertyId ?>);
	if (max_<?php echo $propertyId ?>.length >= 2) { params += 'max_<?php echo $propertyId ?>=' + max_<?php echo $propertyId ?> + '&'; todo = false; }

<?php endforeach;?>

	$('#mode-text').text((todo) ? '<?php echo $this->translate('available', 'ppit-master-data', $context->getLocale())?>' : '<?php echo $this->translate('search', 'ppit-core', $context->getLocale())?>');

	return params;
}

// Export the list
function exportProductList(type) {

	var params = getParams(type);
	document.location.href = '<?php echo $this->url('product/export') ?>/' + type + params;
}

function eraseProductSearch(type) {
	$('#search_type').val('');
	$('#search_brand').val('');
	$('#search_reference').val('');
	$('#search_caption').val('');
	$('#search_min_price').val('');
	$('#search_max_price').val('');

<?php foreach ($context->getConfig('ppitProduct')['properties'] as $propertyId => $property) : ?>
	$('#search_<?php echo $propertyId ?>').val('');
	$('#search_min_<?php echo $propertyId ?>').val('');
	$('#search_max_<?php echo $propertyId ?>').val('');
<?php endforeach;?>

	getProductList(type, getParams(type), 'caption', 'ASC');
}

function sortProductList(type, criterion) {

	var dir;
	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (criterion + '-anchor' == ascCriterion) dir = 'DESC'; else dir = 'ASC';
	getProductList(type, getParams(type), criterion, dir);
}

function filterProductList(type) {

	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (ascCriterion) {
		criterion = ascCriterion.split('-')[0];
		dir = 'ASC';
	}
	getProductList(type, getParams(type), criterion, dir);
}

function connectProductSearchInputs(type) {

	$('#export-button').click(function () { exportProductList(type); });
	
	$('#search_type').change(function () { filterProductList(type); });
	$('#search_brand').keyup(function () { filterProductList(type); });
	$('#search_reference').keyup(function () { filterProductList(type); });
	$('#search_caption').keyup(function () { filterProductList(type); });
	$('#search_min_price').keyup(function () { filterProductList(type); });
	$('#search_max_price').keyup(function () { filterProductList(type); });
	
	$('#erase-button').unbind();
	$('#erase-button').click(function () { eraseProductSearch(type); });

<?php foreach ($context->getConfig('ppitProduct')['properties'] as $propertyId => $property) : ?>
	$('#search_<?php echo $propertyId ?>').keyup(function () { filterProductList(type); });
	$('#search_min_<?php echo $propertyId ?>').keyup(function () { filterProductList(type); });
	$('#search_max_<?php echo $propertyId ?>').keyup(function () { filterProductList(type); });
<?php endforeach;?>
}

// Load the list
function getProductList(type, params, major, dir) {		

	// Execute the ajax request
	route = '<?php echo $this->url('product/list') ?>/' + type + params + '&major=' + major + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('ppitUser/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('product-list-panel').innerHTML = xhttp.responseText;
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});
			
			// Connect the sort anchors
			$('.ppit-sort-anchor').each(function () {
				$(this).click(function () {
					sortProductList(type, $(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the detail anchors
			$('.product-detail-anchor').each(function () {
				$(this).click(function () {
					getProductDetail(type, $(this).attr('id').split('_')[1], 'product');
				});
			});
			
			// Connect the options anchors
			$('#option-anchor').click(function () {
				getProductDetail(type, 0, 'options');
			});
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();
}

<?php 
$properties = array();

$properties['product-type'] = array('type' => 'select', 'mandatory' => true);
$properties['product-brand'] = array('type' => 'input', 'mandatory' => false, 'maxSize' => 255);
$properties['product-reference'] = array('type' => 'input', 'mandatory' => true, 'maxSize' => 255);
$properties['product-caption'] = array('type' => 'input', 'mandatory' => true, 'maxSize' => 255);
$properties['product-description'] = array('type' => 'input', 'mandatory' => false, 'maxSize' => 2047);
$properties['product-is_available'] = array('type' => 'checkbox');

foreach ($context->getConfig('ppitProduct/update') as $propertyId => $options) {
	$property = $context->getConfig('ppitProduct')['properties'][$propertyId];
	if ($property['type'] == 'number') $properties['product-'.$propertyId] = array('type' => $property['type'], 'mandatory' => $options['mandatory'], 'minValue' => $property['minValue'], 'maxValue' => $property['maxValue']);
	else $properties['product-'.$propertyId] = array('type' => $property['type'], 'mandatory' => $options['mandatory'], 'maxSize' => ($property['type'] == 'textarea') ? 2047 : 255);
}

$properties['product-variant-number'] = array('type' => 'hidden');
$properties['product-price_0'] = array('type' => 'number', 'minValue' => -9999999999, 'maxValue' => 9999999999);
$properties['product-tax_1_share'] = array('type' => 'number', 'minValue' => 0, 'maxValue' => 100);
$properties['product-tax_2_share'] = array('type' => 'number', 'minValue' => 0, 'maxValue' => 100);
$properties['product-tax_3_share'] = array('type' => 'number', 'minValue' => 0, 'maxValue' => 100);
$properties['update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'Product', 'context' => $context, 'properties' => $properties)) 
?>

function connectProductUpdateForm(type, id, action)
{

<?php foreach ($properties as $propertyId => $property) : ?>
	<?php if ($property['type'] == 'date') : ?>
	$('#input_<?php echo $propertyId ?>').datepicker();
	<?php endif;?>
<?php endforeach ?>

	// Check validity
	var validity = checkProductUpdateProperties(id);
	if (validity) {
	
		// Create a new FormData object.
		var formData = new FormData();
		
		// Get the properties values
<?php foreach ($properties as $propertyId => $property) : ?>
	<?php if ($property['type'] == 'input' || $property['type'] == 'date' || $property['type'] == 'textarea' || $property['type'] == 'select' || $property['type'] == 'repository' || $property['type'] == 'number' || $property['type'] == 'email' || $property['type'] == 'phone' || $property['type'] == 'hidden') : ?>
			formData.append('<?php echo $propertyId ?>', document.getElementById('<?php echo $propertyId ?>').value);
	<?php elseif ($property['type'] == 'checkbox') : ?>
			formData.append('<?php echo $propertyId ?>', ((document.getElementById('<?php echo $propertyId ?>').checked) ? 1 : 0));
	<?php endif ?>
<?php endforeach ?>

		var xhttp = new XMLHttpRequest();
		var route, target;
		route = '<?php echo $this->url('product/update') ?>/' + type + '/' + id;
		if (action) route += '/' + action;
		xhttp.open('POST', route, true);
		// Set up a handler for when the request finishes.
		xhttp.onload = function () {
			if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
				$('#product-update-panel').html(xhttp.responseText);
				filterProductList(type);
				$('#remove-anchor').click(function () { $('#product-update-panel').hide(); });
				$('.action-btn').removeClass('btn-primary').addClass('btn-default');
			}
		};
		xhttp.send(formData);
	}
	else return false;
}

function getProductUpdate(type, id, action) {

	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('product/update') ?>/' + type + '/' + id;
	if (action) route += '/' + action;
	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('ppitUser/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			$('#product-update-panel').html(xhttp.responseText);			
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});

			$('#product-up-submit-button').click(function () { connectProductUpdateForm(type, id, action); });
			$('#product-submit-button').click(function () { connectProductUpdateForm(type, id, action); });
			
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.action-btn').removeClass("btn-primary").addClass("btn-default");
	if (action == 'update') $('#product-update-anchor').removeClass("btn-default").addClass("btn-primary");
	else if (action == 'delete') $('#product-delete-anchor').removeClass("btn-default").addClass("btn-primary");
}

// Load the detail panel
function getProductDetail(type, id, mode) {

	// Ensure the target is displayed
	$('#form_action').show();

	// Anchor to the new panel
	$(location).attr('hash', 'form_action');

	var route = '<?php echo $this->url('product/detail') ?>/' + type + '/' + id;

	// Execute the ajax request
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('ppitUser/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			$('#form_panel').html(xhttp.responseText);
			$('#form_panel').show();
			connectRemoveIcon(type, 'remove-anchor', 'form_panel');
			if (mode == 'options') {
				$('#product-title').hide();
				getOptionList(type, $('#product_id').val(), '?', 'reference', 'ASC');
			}
			else {
				$('#option-title').hide();
				getProductUpdate(type, id, '');
				if (id == 0) $('#option-title').hide();
				else getOptionList(type, $('#product_id').val(), '?', 'reference', 'ASC');
				$('#product-update-anchor').click(function () { getProductUpdate(type, id, 'update'); });
				$('#product-delete-anchor').click(function () { getProductUpdate(type, id, 'delete'); });
			}

	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.index-btn').removeClass("btn-primary").addClass("btn-default");
	if (mode == 'options') $('#option-anchor').removeClass("btn-default").addClass("btn-primary");
	else $('#product-detail-anchor_' + id).removeClass("btn-default").addClass("btn-primary");
}

function activateProduct(type) {

	// Load the search panel and highlight the menu entry
	loadPanel('search_panel', '<?php echo $this->url('product/search') ?>/' + type);
	$('.menu-btn').removeClass("btn-primary").addClass("btn-default");
	$('#product-anchor').removeClass("btn-default").addClass("btn-primary");
	$('#mode-text').text('<?php echo $this->translate('available', 'ppit-master-data', $context->getLocale())?>');
	
	// Connect the search inputs
	connectProductSearchInputs(type);
	
	getProductList(type, '?', 'caption', 'ASC');
	
	$('#add-criteria').click(function () {
		$('#search-area').show();
		$('#add-criteria').hide();
	});
	$('#search-area').hide();
}
